class Sorting {
    /*

    Сортировки, какие бывают и как работают

    Как правило, лучшими алгоритмами сортировки являются:
    Cортировка слиянием
    Cортировка кучей
    Cортировка Хоара
    поскольку все они имеют среднюю временную сложность O (n log n).

    1. Сортировка выбором

    Этап 1
    в начале списка первое значение берётся за минимальное

    Этап 2
    Взятое значение сравнивается с последующими
    Если последуещее оказывается меньше то оно берётся за пример наименьшего

    Этап 3
    После полного прохождения списка
    Наименьшее значение устанавливается влево и пропускается при последующих проверках

    процесс повторяется до тех пор пока не останеся последнее для сортировки значение
    таким образом они выстроятся по возрастанию

    Заключение:
    Сортировка выбором является неэффективным алгоритмом сортировки
    и имеет временную сложность O (n²).

    являясь предельно простым примером способов сортировки массивов


    2. Cортировка кучей
    Для начала представим массив в виде бинарного дерева [2.8.1.7.4.3.5.52.12.42.53.42.25.36.31]
               2
            /      \
         8           1
       /   \        /  \
      7     4      3    5
     / \   / \    / \   / \
    52 12 42 53  42 25 36 31
    Далее выполняем условие:
    каждый потомок должен быть больше чем родитель (если куча убывающая)
    каждый родитель должен быть больше чем потомок (если куча возростающая)

    Этап 1
    переносим самого нижнего потомка в буфер обмена и сравнимаем его с его родителем
    если куча возростающая то самый большой элемент переносится на место родителя
    а родитель на место потомка

               53
            /      \
         52         42
       /   \        /  \
      12   42      25    36
     / \   / \    / \   / \
    7   2 8  4   3  1 5    31

    Этап 2
    берём максимальный элемент и меняем местами с последним т.е 53 и 31
    вследствии этого элемент 53 выпадает из массива и в дереве уже не учавствует
    после чего начинаем менять родителя (31) на самого большого потомка и так далее сверху вниз

               52
            /      \
         42         42
       /   \        /  \
      12   31      25    36
     / \   / \    / \   / \
    7   2 8  4   3  1  5

    после чего повторяем операцию, заменив 52 на 5 и отбрасывая 52
    так работает классическая сортировка кучей

    Заключение:

    Сортировка кучей или же Пирамидальная сортировка
    Актуальна и работает в худшем, в среднем и в лучшем случае за O(n\log n)
    Количество применяемой служебной памяти не зависит от размера массива.

    */
}